[{"D:\\Clone_projects\\amazon-clone\\src\\index.js":"1","D:\\Clone_projects\\amazon-clone\\src\\reportWebVitals.js":"2","D:\\Clone_projects\\amazon-clone\\src\\StateProvider.js":"3","D:\\Clone_projects\\amazon-clone\\src\\App.js":"4","D:\\Clone_projects\\amazon-clone\\src\\reducer.js":"5","D:\\Clone_projects\\amazon-clone\\src\\Header.js":"6","D:\\Clone_projects\\amazon-clone\\src\\Home.js":"7","D:\\Clone_projects\\amazon-clone\\src\\Login.js":"8","D:\\Clone_projects\\amazon-clone\\src\\Payment.js":"9","D:\\Clone_projects\\amazon-clone\\src\\Checkout.js":"10","D:\\Clone_projects\\amazon-clone\\src\\Orders.js":"11","D:\\Clone_projects\\amazon-clone\\src\\firebase.js":"12","D:\\Clone_projects\\amazon-clone\\src\\CheckoutProduct.js":"13","D:\\Clone_projects\\amazon-clone\\src\\axios.js":"14","D:\\Clone_projects\\amazon-clone\\src\\Product.js":"15","D:\\Clone_projects\\amazon-clone\\src\\Subtotal.js":"16","D:\\Clone_projects\\amazon-clone\\src\\Order.js":"17"},{"size":684,"mtime":1636953412477,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":375,"mtime":1636951122635,"results":"21","hashOfConfig":"19"},{"size":1640,"mtime":1637816764268,"results":"22","hashOfConfig":"19"},{"size":1284,"mtime":1637640835802,"results":"23","hashOfConfig":"19"},{"size":2104,"mtime":1637650132053,"results":"24","hashOfConfig":"19"},{"size":2568,"mtime":1636895093369,"results":"25","hashOfConfig":"19"},{"size":1929,"mtime":1637237179527,"results":"26","hashOfConfig":"19"},{"size":6019,"mtime":1637677716389,"results":"27","hashOfConfig":"19"},{"size":1230,"mtime":1637297588113,"results":"28","hashOfConfig":"19"},{"size":1034,"mtime":1637647979977,"results":"29","hashOfConfig":"19"},{"size":576,"mtime":1637236004097,"results":"30","hashOfConfig":"19"},{"size":1151,"mtime":1637649361100,"results":"31","hashOfConfig":"19"},{"size":160,"mtime":1637468869376,"results":"32","hashOfConfig":"19"},{"size":1233,"mtime":1637470639323,"results":"33","hashOfConfig":"19"},{"size":1149,"mtime":1637324021651,"results":"34","hashOfConfig":"19"},{"size":1245,"mtime":1637648329751,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jss954",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Clone_projects\\amazon-clone\\src\\index.js",[],"D:\\Clone_projects\\amazon-clone\\src\\reportWebVitals.js",[],"D:\\Clone_projects\\amazon-clone\\src\\StateProvider.js",[],"D:\\Clone_projects\\amazon-clone\\src\\App.js",["79","80"],"import React, {useEffect} from \"react\";\nimport Header from \"./Header\";\nimport Home from \"./Home\";\nimport Checkout from \"./Checkout\";\nimport Login from \"./Login\";\nimport Payment from \"./Payment\";\nimport Orders from \"./Orders\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { auth } from \"firebase\";\nimport {useStateValue} from \"./StateProvider\";\nimport {loadStripe} from \"@stripe/stripe-js\"\nimport {Elements} from \"@stripe/react-stripe-js\"\n\nconst promise = loadStripe('pk_test_51JxmwiSDAmCs3ZvnBIWwe3oYSGTjLzkSkVsUKSEUHS267mu0Kg6iyzCKNpf4m2wwhF4KDMhAAZBxqcpqBbc3j1ex00Bazflzjs');\n\nfunction App() {\n  const [{},dispatch]=useStateValue();\n  useEffect(() => {\n    auth().onAuthStateChanged(authUser => {\n      console.log('Hello',authUser);\n      if(authUser){\n        dispatch({\n          type: 'SET_USER',\n          user: authUser\n        })\n\n      } else{\n        dispatch({\n          type: 'SET_USER',\n          user: null\n        })\n\n      }\n    });\n  }, [])\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n        <Route path=\"/orders\">\n            <Orders />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/checkout\">\n            <Header />\n            <Checkout />\n          </Route>\n          <Route path=\"/payment\">\n            <Header />\n            <Elements stripe={promise}>\n            <Payment />\n            </Elements>\n          </Route>\n          <Route path=\"/\">\n            <Header />\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","D:\\Clone_projects\\amazon-clone\\src\\reducer.js",[],"D:\\Clone_projects\\amazon-clone\\src\\Header.js",["81","82"],"import React from 'react'\r\nimport './Header.css'\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport ShoppingBasketIcon from '@mui/icons-material/ShoppingBasket';\r\nimport {Link} from \"react-router-dom\"\r\nimport {useStateValue} from \"./StateProvider\";\r\nimport {auth} from \"./firebase\"\r\n\r\nfunction Header() {\r\n    const [{basket,user},dispatch] = useStateValue();\r\n\r\n    const handleAuthentication=()=>{\r\n        if(user){\r\n           auth.signOut();\r\n        }\r\n    }\r\n    return (\r\n        <div className='header'>\r\n           <Link to=\"/\"> <img className=\"header_logo\" src=\"http://pngimg.com/uploads/amazon/amazon_PNG11.png\" /></Link>\r\n            <div className=\"header_search\">\r\n               <input className=\"header_searchInput\" type=\"text\" />\r\n               <SearchIcon className=\"header_searchIcon\"/>\r\n            </div>\r\n            <div className=\"header_nav\">\r\n                <Link to={!user && \"/login\"}>\r\n                <div onClick={handleAuthentication} className=\"header_option\">\r\n                    <span className=\"header_optionLineOne\">Hello {!user?'Guest':user.email}</span>\r\n                    <span className=\"header_optionLineTwo\">{user? \"Sign Out\":\"Sign In\"}</span>\r\n                </div>\r\n                </Link>\r\n                <Link>\r\n                <div className=\"header_option\">\r\n                    <span className=\"header_optionLineOne\">Returns</span>\r\n                    <span className=\"header_optionLineTwo\">Orders</span>\r\n                </div>\r\n                </Link>\r\n                <div className=\"header_option\">\r\n                    <span className=\"header_optionLineOne\">Your</span>\r\n                    <span className=\"header_optionLineTwo\">Prime</span>\r\n                </div>\r\n                <Link to=\"/checkout\">\r\n                <div className=\"header_optionBasket\">\r\n                    <ShoppingBasketIcon />\r\n                    <span className=\"header_optionLineTwo header_basketCount\">{basket?.length}</span>\r\n                </div>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","D:\\Clone_projects\\amazon-clone\\src\\Home.js",[],"D:\\Clone_projects\\amazon-clone\\src\\Login.js",["83"],"import React from 'react'\r\nimport \"./Login.css\"\r\nimport {Link, useHistory} from \"react-router-dom\"\r\nimport { useState } from 'react';\r\nimport {auth} from \"./firebase\";\r\nfunction Login() {\r\n    const history= useHistory();\r\n    const [email, setEmail]=useState('');\r\n    const [password, setpassword]=useState('');\r\n    const signIn=e=>{\r\n        e.preventDefault();\r\n        auth\r\n            .signInWithEmailAndPassword(email,password)\r\n            .then(auth=>{\r\n                history.push('/');\r\n            })\r\n            .catch(error=> alert(error.message))\r\n    }\r\n    const register=e=>{\r\n        e.preventDefault();\r\n        auth\r\n            .createUserWithEmailAndPassword(email,password)\r\n            .then((auth)=>{\r\n                console.log(auth);\r\n                if(auth){\r\n                    history.push('/')\r\n                }\r\n            })\r\n            .catch(error=>alert(error.message))\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n           <Link to=\"/\"> <img className=\"login__logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a9/Amazon_logo.svg/1024px-Amazon_logo.svg.png\"/></Link>\r\n        \r\n           <div className=\"login__container\">\r\n               <h1>Sign-in</h1>\r\n               <form>\r\n                   <h5>E-mail</h5> <input type=\"text\" value={email} onChange={e=> setEmail(e.target.value)}/>\r\n                   <h5>Password</h5> <input type=\"password\" value={password} onChange={e=> setpassword(e.target.value)}/>\r\n                   \r\n                   <button type=\"submit\" onClick={signIn} className=\"login__signInButton\">Sign In</button>\r\n               </form>\r\n               <p>By continuing, you agree to AMAZON CLONE Conditions of Use and Privacy Notice.</p>\r\n               <button onClick={register} className=\"login__registerButton\">Create your Amazon account</button>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","D:\\Clone_projects\\amazon-clone\\src\\Payment.js",["84"],"import React, { useState, useEffect } from 'react';\r\nimport './Payment.css';\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport CheckoutProduct from \"./CheckoutProduct\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { getBasketTotal } from \"./reducer\";\r\nimport axios from './axios';\r\nimport { db } from \"./firebase\";\r\n\r\nfunction Payment() {\r\n    const [{ basket, user }, dispatch] = useStateValue();\r\n    const history = useHistory();\r\n\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    const [succeeded, setSucceeded] = useState(false);\r\n    const [processing, setProcessing] = useState(\"\");\r\n    const [error, setError] = useState(null);\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [clientSecret, setClientSecret] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // generate the special stripe secret which allows us to charge a customer\r\n        const getClientSecret = async () => {\r\n            const response = await axios({\r\n                method: 'post',\r\n                // Stripe expects the total in a currencies subunits\r\n                url: `/payments/create?total=${getBasketTotal(basket) * 100}`\r\n            });\r\n            setClientSecret(response.data.clientSecret)\r\n        }\r\n\r\n        getClientSecret();\r\n    }, [basket])\r\n\r\n    console.log('THE SECRET IS >>>', clientSecret)\r\n    console.log('👱', user)\r\n\r\n    const handleSubmit = async (event) => {\r\n        // do all the fancy stripe stuff...\r\n        event.preventDefault();\r\n        setProcessing(true);\r\n\r\n        const payload = await stripe.confirmCardPayment(clientSecret, {\r\n            payment_method: {\r\n                card: elements.getElement(CardElement)\r\n            }\r\n        }).then(({ paymentIntent }) => {\r\n            \r\n\r\n            db.collection('users')\r\n            .doc(user?.uid)\r\n            .collection('orders')\r\n            .doc(paymentIntent.id)\r\n            .set({\r\n                basket: basket,\r\n                amount: paymentIntent.amount,\r\n                created: paymentIntent.created\r\n            })\r\n\r\n            setSucceeded(true);\r\n            setError(null)\r\n            setProcessing(false)\r\n\r\n            dispatch({\r\n                type: 'EMPTY_BASKET'\r\n            })\r\n\r\n            history.replace('/Orders')\r\n        })\r\n\r\n    }\r\n\r\n    const handleChange = event => {\r\n        // Listen for changes in the CardElement\r\n        // and display any errors as the customer types their card details\r\n        setDisabled(event.empty);\r\n        setError(event.error ? event.error.message : \"\");\r\n    }\r\n\r\n    return (\r\n        <div className='payment'>\r\n            <div className='payment__container'>\r\n                <h1>\r\n                    Checkout (\r\n                        <Link to=\"/checkout\">{basket?.length} items</Link>\r\n                        )\r\n                </h1>\r\n\r\n\r\n                {/* Payment section - delivery address */}\r\n                <div className='payment__section'>\r\n                    <div className='payment__title'>\r\n                        <h3>Delivery Address</h3>\r\n                    </div>\r\n                    <div className='payment__address'>\r\n                        <p>{user?.email}</p>\r\n                        <p>B-44 Aakash Nagar</p>\r\n                        <p>Durg, Chhattisgarh, India</p>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Payment section - Review Items */}\r\n                <div className='payment__section'>\r\n                    <div className='payment__title'>\r\n                        <h3>Review items and delivery</h3>\r\n                    </div>\r\n                    <div className='payment__items'>\r\n                        {basket.map(item => (\r\n                            <CheckoutProduct\r\n                                id={item.id}\r\n                                title={item.title}\r\n                                image={item.image}\r\n                                price={item.price}\r\n                                rating={item.rating}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            \r\n\r\n                {/* Payment section - Payment method */}\r\n                <div className='payment__section'>\r\n                    <div className=\"payment__title\">\r\n                        <h3>Payment Method</h3>\r\n                    </div>\r\n                    <div className=\"payment__details\">\r\n                            {/* Stripe magic will go */}\r\n\r\n                            <form onSubmit={handleSubmit}>\r\n                                <CardElement onChange={handleChange}/>\r\n\r\n                                <div className='payment__priceContainer'>\r\n                                    <CurrencyFormat\r\n                                        renderText={(value) => (\r\n                                            <h3>Order Total: {value}</h3>\r\n                                        )}\r\n                                        decimalScale={2}\r\n                                        value={getBasketTotal(basket)}\r\n                                        displayType={\"text\"}\r\n                                        thousandSeparator={true}\r\n                                        prefix={\"$\"}\r\n                                    />\r\n                                    <button disabled={processing || disabled || succeeded}>\r\n                                        <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\r\n                                    </button>\r\n                                </div>\r\n\r\n                                  {/* Errors */}\r\n                                {error && <div>{error}</div>}\r\n                            </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Payment","D:\\Clone_projects\\amazon-clone\\src\\Checkout.js",["85","86"],"import React from 'react'\r\nimport \"./Checkout.css\"\r\nimport CheckoutProduct from './CheckoutProduct';\r\nimport { useStateValue } from './StateProvider';\r\nimport Subtotal from './Subtotal'\r\nfunction Checkout() {\r\n    const [{basket,user},dispatch]=useStateValue();\r\n    return(\r\n        <div className=\"checkout\">\r\n            <div className=\"checkout__left\">\r\n                <img className=\"checkout__ad\" src=\"https://images-na.ssl-images-amazon.com/images/G/02/UK_CCMP/TM/OCC_Amazon1._CB423492668_.jpg\"></img>\r\n                <div>\r\n                    <h3>Hello, {user.email}</h3>\r\n                    <h2 className=\"checkout__title\">Your shopping basket</h2>\r\n                    {basket.map(item=>(\r\n                        <CheckoutProduct \r\n                            id={item.id}\r\n                            title={item.title}\r\n                            image={item.image}\r\n                            price={item.price}\r\n                            rating={item.rating}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div className=\"checkout__right\">\r\n                <Subtotal />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n","D:\\Clone_projects\\amazon-clone\\src\\Orders.js",["87","88"],"import React, { useState, useEffect } from 'react';\r\nimport { db } from \"./firebase\";\r\nimport './Orders.css'\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport Order from './Order'\r\n\r\nfunction Orders() {\r\n  const [{ basket, user }, dispatch] = useStateValue();\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if(user) {\r\n        db\r\n        .collection('users')\r\n        .doc(user?.uid)\r\n        .collection('orders')\r\n        .orderBy('created', 'desc')\r\n        .onSnapshot(snapshot => (\r\n            setOrders(snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                data: doc.data()\r\n            })))\r\n        ))\r\n    } else {\r\n        setOrders([])\r\n    }\r\n\r\n  }, [user])\r\n\r\n    return (\r\n        <div className='orders'>\r\n            <h1>Your Orders</h1>\r\n\r\n            <div className='orders__order'>\r\n                {orders?.map(order => (\r\n                    <Order order={order} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Orders","D:\\Clone_projects\\amazon-clone\\src\\firebase.js",[],"D:\\Clone_projects\\amazon-clone\\src\\CheckoutProduct.js",["89","90"],"import React from 'react';\r\nimport \"./CheckoutProduct.css\";\r\nimport { useStateValue } from './StateProvider';\r\nfunction CheckoutProduct({id,image,title,price,rating,hideButton}) {\r\n    const [{basket},dispatch]=useStateValue();\r\n    const removeFromBasket=()=>{\r\n       dispatch({\r\n           type: \"REMOVE_FROM_BASKET\",\r\n           id: id,\r\n       })\r\n    }\r\n    return (\r\n        <div className=\"checkoutProduct\">\r\n            <img className=\"checkoutProduct__image\" src={image}/>\r\n            <div className=\"checkoutProduct__info\">\r\n                <p className=\"checkoutProduct__title\">{title}</p>\r\n                <p className=\"checkoutProduct__price\">\r\n                    <small>$</small>\r\n                    <strong>{price}</strong>\r\n                </p>\r\n                <div className=\"checkoutProduct__rating\">\r\n                    {Array(rating).fill().map((_,i)=>(<p>⭐</p>))}\r\n                </div>\r\n                {!hideButton && (\r\n                    <button onClick={removeFromBasket}>Remove from Basket</button>\r\n                )}\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default CheckoutProduct","D:\\Clone_projects\\amazon-clone\\src\\axios.js",[],"D:\\Clone_projects\\amazon-clone\\src\\Product.js",["91"],"import React from 'react'\r\nimport \"./Product.css\"\r\nimport { useStateValue } from './StateProvider'\r\nfunction Product({id,title,image,price,rating}) {\r\n    const [{basket},dispatch]=useStateValue();\r\n\r\n    const addToBasket=()=>{\r\n        dispatch({\r\n            type: 'ADD_TO_BASKET',\r\n            item: {\r\n                id: id,\r\n                title: title,\r\n                image: image,\r\n                price: price,\r\n                rating: rating,\r\n            },\r\n        })\r\n        alert(\"Item added to your basket\");\r\n\r\n    }\r\n    return (\r\n        <div className=\"product\">\r\n            <div className=\"product_info\">\r\n                <p>{title}</p>\r\n                <p className=\"product_price\">\r\n                    <small>$</small>\r\n                    <strong>{price}</strong>\r\n                </p>\r\n                <div className=\"product__rating\">\r\n                {Array(rating)\r\n            .fill()\r\n            .map((_, i) => (\r\n              <p>⭐</p>\r\n            ))}\r\n        </div>\r\n            </div>\r\n            <img src={image} alt=\"\"></img>\r\n            <button className=\"addTOBasket\" onClick={addToBasket} >Add to Basket\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product;\r\n","D:\\Clone_projects\\amazon-clone\\src\\Subtotal.js",["92","93"],"import React, { useState } from 'react'\r\nimport \"./Subtotal.css\"\r\nimport CurrencyFormat from \"react-currency-format\"\r\nimport {useStateValue} from \"./StateProvider\"\r\nimport { getBasketTotal } from './reducer';\r\nimport {useHistory} from \"react-router-dom\";\r\nfunction Subtotal() {\r\n    const history=useHistory();\r\n    const [{basket},dispatch]=useStateValue();\r\n    return (\r\n        <div className=\"subtotal\">\r\n            <CurrencyFormat\r\n                renderText={(value)=>(\r\n                    <>\r\n                    <p>Subtotal ({basket.length} items): <strong>{value}</strong></p>\r\n                    <small className=\"subtotal__gift\">\r\n                        <input type=\"checkbox\" />This order contains a gift\r\n                    </small>\r\n                    </>\r\n                )}\r\n                decimalScale={2} \r\n                value={getBasketTotal(basket)}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                prefix={\"$\"}\r\n            />\r\n            <button onClick={e =>history.push('/payment')}>Proceed to checkout</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subtotal\r\n","D:\\Clone_projects\\amazon-clone\\src\\Order.js",[],{"ruleId":"94","severity":1,"message":"95","line":17,"column":10,"nodeType":"96","messageId":"97","endLine":17,"endColumn":12},{"ruleId":"98","severity":1,"message":"99","line":35,"column":6,"nodeType":"100","endLine":35,"endColumn":8,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":10,"column":26,"nodeType":"104","messageId":"105","endLine":10,"endColumn":34},{"ruleId":"106","severity":1,"message":"107","line":19,"column":26,"nodeType":"108","endLine":19,"endColumn":113},{"ruleId":"106","severity":1,"message":"107","line":34,"column":26,"nodeType":"108","endLine":34,"endColumn":163},{"ruleId":"102","severity":1,"message":"109","line":47,"column":15,"nodeType":"104","messageId":"105","endLine":47,"endColumn":22},{"ruleId":"102","severity":1,"message":"103","line":7,"column":26,"nodeType":"104","messageId":"105","endLine":7,"endColumn":34},{"ruleId":"106","severity":1,"message":"107","line":11,"column":17,"nodeType":"108","endLine":11,"endColumn":146},{"ruleId":"102","severity":1,"message":"110","line":8,"column":12,"nodeType":"104","messageId":"105","endLine":8,"endColumn":18},{"ruleId":"102","severity":1,"message":"103","line":8,"column":28,"nodeType":"104","messageId":"105","endLine":8,"endColumn":36},{"ruleId":"102","severity":1,"message":"110","line":5,"column":13,"nodeType":"104","messageId":"105","endLine":5,"endColumn":19},{"ruleId":"106","severity":1,"message":"107","line":14,"column":13,"nodeType":"108","endLine":14,"endColumn":66},{"ruleId":"102","severity":1,"message":"110","line":5,"column":13,"nodeType":"104","messageId":"105","endLine":5,"endColumn":19},{"ruleId":"102","severity":1,"message":"111","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":25},{"ruleId":"102","severity":1,"message":"103","line":9,"column":21,"nodeType":"104","messageId":"105","endLine":9,"endColumn":29},"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["112"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'payload' is assigned a value but never used.","'basket' is assigned a value but never used.","'useState' is defined but never used.",{"desc":"113","fix":"114"},"Update the dependencies array to be: [dispatch]",{"range":"115","text":"116"},[992,994],"[dispatch]"]